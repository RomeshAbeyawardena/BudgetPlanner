@model BudgetPlannerDetailsViewModel

@{
    ViewBag.Title = "Details";
    var pageQuery = string.Concat("?pageSize=", Model.PageSize, "&pageNumber={0}");
    var transactionRequestData = Html.Base64Encode(Json.Serialize(new TransactionListRequestViewModel
    {
        Reference = Model.Reference,
        FromDate = Model.FromDate,
        ToDate = Model.ToDate,
        PageSize = Model.PageSize,
        PageNumber = Model.PageNumber,
        PreviousPageUrl = pageQuery,
        NextPageUrl = pageQuery,
        SelectPageUrl = pageQuery
    }), Encoding.UTF8);

    var budgetPlannerStatsData = Html.Base64Encode(Json.Serialize(Model.BudgetStatisticsRequest), Encoding.UTF8);
}

@Html.ActionLink("Dashboard", "Index", "Home")

<h1>@Model.Name</h1>

<h3>@Html.FormatContent(FormatConstants.SetFormat(FormatConstants.CurrencyFormat), Model.Balance)</h3>

@Html.Raw(Model.Content)

<section class="card">
    <div class="card-header">
        Spending Summary
    </div>
    <div class="card-body">
        <budget-statistics request-url="@Url.Action("BudgetStatistics","Budget")"
                           reference="@Model.Reference"
                           :fromDate="new Date(@Model.FromDate.Ticks)"
                           :toDate="new Date(@Model.ToDate.Ticks)">
        </budget-statistics>

    </div>
</section>

<section class="card">
    <div class="card-header">Details</div>
    <div class="card-body">
         <transaction-list request-url="@Url.Action("GetTransactions", "Transaction")" 
                           reference="@Model.Reference"
                           :page-number="1"
                           :items-per-page="10"
                           :from-date="new Date(@Model.FromDate.Ticks)"
                           :to-date="new Date(@Model.ToDate.Ticks)">

         </transaction-list>
    </div>
</section>

@Html.ActionLink("Add Transaction", "CreateTransaction", "Budget", new { reference = Model.Reference }, DictionaryBuilder
                .Create<string, object>(dictionaryBuilder => dictionaryBuilder
                    .Add("class", "btn btn-primary")
                    .Add("popup", "modal")
                    .Add("data-args", Json.Serialize(new { IsModal = true }))).ToDictionary())