@model AddBudgetTransactionViewModel

@Html.AntiForgeryToken()
@Html.HiddenFor(model => model.IsModal)
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.Created)
@Html.HiddenFor(model => model.BudgetId)

<div class="form-group">
    @Html.LabelFor(model => model.TransactionTypeId, Model.TransactionTypeLabel)
    @Html.DropDownListFor(model => model.TransactionTypeId, Model.TransactionTypes, "Please select", 
        new { @class = "form-control", id = "transactionDropDown" })
    @Html.ValidationMessageFor(model => model.TransactionTypeId)
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Description, Model.DescriptionLabel)
    @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
    @Html.ValidationMessageFor(model => model.Description)
</div>
<div class="form-group" id="costDetails">
    @Html.LabelFor(model => model.Amount, Model.AmountLabel)
    @Html.DisplayIf(Model.Id == default, 
        Html.TextBoxFor(model => model.Amount, "{0:0.00}", new { @class = "form-control", type = "number", step = "0.05" }),
        Html.HiddenFor(model => model.Amount))

    @if(Model.Id != default)
    {
        @Html.DisplayFor(model => model.Amount)
    }
    
    @Html.ValidationMessageFor(model => model.Amount)
</div>
<div class="form-group d-none" id="estimatedCost" 
     data-src="@Url.Action("CalculateNewBalance", "Budget")"
     data-parameters="@Json.Serialize(new { budgetId = Model.BudgetId }).GetString().ToBase64String(Encoding.UTF8)">

</div>
<div class="form-group">
    @Html.LabelFor(model => model.Tags, Model.TagsLabel)
    <tags-input input-text-id="@Html.IdFor(model => model.Tags)"
                input-text-name="@Html.NameFor(model => model.Tags)"
                input text-value="@Html.ValueFor(model => model.Tags)"
                input-tag-white-list-request-url="@Url.Action("GetTags","Tag")"
                input-tag-white-list-save-request-url="@Url.Action("SaveTag","Tag")">

    </tags-input>
    
</div>
<div class="form-group form-check">
    <input type="checkbox" 
           id="@Html.IdFor(model => model.Active)" 
           name="@Html.NameFor(model => model.Active)" 
           value="@Html.ValueFor(model => model.Active)"
           class="form-check-input"
           @Html.DisplayIf(Model.Active, "checked='checked'")/>
    @Html.LabelFor(model => model.Active, Model.ActiveLabel)
</div>